# smtp:     
# helm repo add codecentric https://codecentric.github.io/helm-charts
# helm install mailhog --namespace money-claims codecentric/mailhog
# the above commands are not working due to ressource quotas in money-claims namespace
# to start mailhog, use: kubectl create -f k8s/misc/mailhog.yaml
---
# Source: mailhog/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mailhog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mailhog
    helm.sh/chart: mailhog-3.1.3
  name: mailhog
  namespace: money-claims
spec:
  clusterIP: 10.0.236.28
  ports:
    - name: http
      port: 8025
      protocol: TCP
      targetPort: http
    - name: smtp
      port: 1025
      protocol: TCP
      targetPort: smtp
  selector:
    app.kubernetes.io/instance: mailhog
    app.kubernetes.io/name: mailhog
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
# Source: mailhog/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: mailhog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mailhog
    helm.sh/chart: mailhog-3.1.3
  name: mailhog
  namespace: money-claims

spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: mailhog
      app.kubernetes.io/name: mailhog
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: mailhog
        app.kubernetes.io/name: mailhog
    spec:
      containers:
        - env:
            - name: MH_HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: mailhog/mailhog:v1.0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: smtp
            timeoutSeconds: 1
          name: mailhog
          ports:
            - containerPort: 8025
              name: http
              protocol: TCP
            - containerPort: 1025
              name: smtp
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: smtp
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
